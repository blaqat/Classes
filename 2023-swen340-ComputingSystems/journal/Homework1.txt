Instructions:
    1. Assume all values are stored in the smallest variable size necessary for
       the value to fit.
       (I.E. 8 bit values are stored in a char and 16 bit values are stored in a short).
       (Signed value uses 2's complement format).
    2. Provide hexadecimal values in 0x... format (C language format)
    3. Edit this text file and record your answer.
    4. Also for every answer show the manual steps required to arrive at you answer by editing this text file.
    5. Submit your edited text file to the MyCourses assignment folder "Homework 1".
       All submissions MUST be text files.
    6. All questions are worth one point


Questions:
    1. Convert decimal 95 to hexadecimal.
       Answer: 0x5F
       Reasoning:
	95 / 16 = 5 R 15
	and 16 cant go into 5 so (5/16 = 0 R 5)
	the digits are 5, 15 and 5,15 in hexadecimal are 5, F

    2. Convert 0x1CD to unsigned decimal. (Hint: Convert it to binary first!)
       Answer: 461
       Reasoning:
		hex		   1CD is			binary
	= 16 : 1 R 12 R 13			= 1             12               13
	= 16 : 16 + 12 R 13			= 0001     1100            1101
	= 16 * 28 + 13				= 1 1100 1101
	= 448 + 13				= 256 + 128 + 64 + 0 + 0 + 8 + 4 + 0 + 1
				  = 461

    3. What is the value of binary 10101011 in decimal if this is a negative number?
	   Decimal Answer: 85
	   Reasoning:
	Twos Compliment:				0101010 to binary:		
	01010100					= 64 + 16 + 4 + 1
        +	00000001					= 85
       = 01010101

    4. What is the value of binary 111001111 in decimal if this is an unsigned number?
       Decimal Answer: 463
	   Reasoning:
	1  1100  1111
	= 256 + 128 + 64 + 15
	= 463

    5. Add 0x8BCD and 0x02E6 (assume unsigned numbers):
       Hexadecimal Answer: 0x8EB3
       Reasoning:
	8BCD 	=	1000 1011 1100 1101
+	02E6      	= +	0000 0010 1110 0110
			=	1000 1110 1011 0011
			=	   8      E      B       3

    6. Add 8 bit binary integers 10101111 and 11011011
       Hexadecimal Answer: 0x18A
       Reasoning:
	01010 1111			0 0111 0100
(flip)	01101 1011  	      (flip)	1 1111 1110
=	00111 0100		=	1 1000 1010
         				=         	1   8     A
	     

    7.	How many bits are in each of the following data types?

		a. Byte			Answer: 8
		b. Word 		Answer: 16
		c. Doubleword		Answer: 32
		d. Quadword		Answer: 64
		e. Nibble		Answer: 4


    (Questions 8-10 deal with the following registers. This register
    is taken from ST Microelectronics' reference manual for their STM8S and
    STM8AF series microcontrollers, for those who are curious)
    Assume you have an embedded device with the following register:

    Port X Output Data Register (Px_ODR)
        Address Offset: 0x00
        Reset Value: 0x00
          7            6             5          4           3            2           1           0
        ODR7 | ODR6 | ODR5 | ODR4 | ODR3 | ODR2 | ODR1 | ODR0

    Suppose you are given C code that defines the register as follows
    (assume P1_BASE_ADDR is defined elsewhere):
        uint8_t *p1_odr = (uint8_t *) P1_BASE_ADDR;

	8. Suppose current value of the register is 0xC1. You are asked to set ONLY the ODR2 bit in P1_ODR to 1. What will be new register value?
		Hexadecimal Answer: 0xC5
			Reasoning: 
			0xC1 = 1010 0001 
			changing ord2 to 1 would = 1010 0101 which = 0xC5


	9. Suppose current value of the register is 0xC1. You are asked to set ODR2 & ODR5 bits in P1_ODR to 1 AND clear ODR0 bit (i.e. set to zero). What will be new register value?
		Hexadecimal Answer: 0xC4
			Reasoning:
			0xC1 = 1010 0001 
			set ODR2 & ODR5 bits in P1_ODR to 1 = 1010 0101
			clear ODR0 bit = 1010 0100 whch = 0xC4
			
	10. Write C code that sets ONLY the ODR2 bit in P1_ODR to 1
		p1_odr |= 4
		because it does p1_odr = p1_odr | 4 which is (XXXXXXXX | 00000100) which would  always result in the ORD2 (3rd bit from the right) being 1?